<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.dao.BuildingDao">

    <resultMap type="com.lz.entity.Building" id="BuildingMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="buildingNumber" column="building_number" jdbcType="INTEGER"/>
        <result property="constructionTime" column="construction_time" jdbcType="DATE"/>
        <result property="propertyManagementCompany" column="property_management_company" jdbcType="VARCHAR"/>
        <result property="buildingPrincipal" column="building_principal" jdbcType="VARCHAR"/>
        <result property="unitCount" column="unit_count" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BuildingMap">
        select
          id, building_number, construction_time, property_management_company, building_principal, unit_count
        from building
        where id = #{id}
    </select>

    <select id="queryByNumber" resultType="com.lz.entity.Building">
        select * from building
        where building_number = #{buildingNumber}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BuildingMap">
        select
          id, building_number, construction_time, property_management_company, building_principal, unit_count
        from building
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BuildingMap">
        select
          id, building_number, construction_time, property_management_company, building_principal, unit_count
        from building
        <where>
            <if test="building.id != null and building.id != ''">
                and id = #{building.id}
            </if>
            <if test="building.buildingNumber != null">
                and building_number = #{building.buildingNumber}
            </if>
            <if test="building.constructionTime != null">
                and construction_time = #{building.constructionTime}
            </if>
            <if test="building.propertyManagementCompany != null and building.propertyManagementCompany != ''">
                and property_management_company = #{building.propertyManagementCompany}
            </if>
            <if test="building.buildingPrincipal != null and building.buildingPrincipal != ''">
                and building_principal = #{building.buildingPrincipal}
            </if>
            <if test="building.unitCount != null">
                and unit_count = #{building.unitCount}
            </if>
        </where>
        <if test="limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>



    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into building(id,building_number, construction_time, property_management_company, building_principal, unit_count)
        values (#{id},#{buildingNumber}, #{constructionTime,jdbcType=DATE}, #{propertyManagementCompany}, #{buildingPrincipal}, #{unitCount})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update building
        <set>
            <if test="buildingNumber != null">
                building_number = #{buildingNumber},
            </if>
            <if test="constructionTime != null">
                construction_time = #{constructionTime},
            </if>
            <if test="propertyManagementCompany != null and propertyManagementCompany != ''">
                property_management_company = #{propertyManagementCompany},
            </if>
            <if test="buildingPrincipal != null and buildingPrincipal != ''">
                building_principal = #{buildingPrincipal},
            </if>
            <if test="unitCount != null">
                unit_count = #{unitCount},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from building where id = #{id}
    </delete>


    <select id="selectDistinctNumber" resultType="java.lang.Integer">
        select distinct building_number from building;
    </select>
    <select id="getBuildingCount" resultType="java.lang.String">
        select count(*) from building;
    </select>
</mapper>