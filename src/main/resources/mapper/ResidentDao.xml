<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.dao.ResidentDao">

    <resultMap type="com.lz.entity.Resident" id="ResidentMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="gender" column="gender" jdbcType="VARCHAR"/>
        <result property="birthday" column="birthday" jdbcType="DATE"/>
        <result property="telephoneNumber" column="telephone_number" jdbcType="VARCHAR"/>
        <result property="identityCard" column="identity_card" jdbcType="VARCHAR"/>
        <result property="censusRegister" column="census_register" jdbcType="VARCHAR"/>
        <result property="educationalLevel" column="educational_level" jdbcType="VARCHAR"/>
        <result property="photo" column="photo" jdbcType="VARCHAR"/>
        <result property="isHeadOfHousehold" column="is_head_of_household" jdbcType="INTEGER"/>

        <association property="party" column="party_id" javaType="com.lz.entity.Party"
                     select="com.lz.dao.PartyDao.queryById">
        </association>

        <association property="house" column="house_id" javaType="com.lz.entity.House"
                     select="com.lz.dao.HouseDao.queryById">
        </association>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ResidentMap">
        select
          id, name, gender, birthday, telephone_number, identity_card, census_register, educational_level,
          party_id, photo, is_head_of_household, house_id
        from housing_info_management.resident
        where id = #{id}
    </select>

<!--    通过身份证号查找-->
    <select id="queryByIdentityCard" resultMap="ResidentMap">
        select *
        from housing_info_management.resident
        where identity_card = #{identityCard}
    </select>


    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ResidentMap">
        select
          resident.id, name, gender, birthday, telephone_number, identity_card, census_register,
          educational_level, party_id, photo, is_head_of_household, house_id
        from housing_info_management.resident,housing_info_management.building,
        housing_info_management.unit,housing_info_management.house
        <where>
            building.id = unit.building_id and unit.id = house.unit_id
            and house.id = resident.house_id
            <if test="buildingId != null and buildingId != '' ">
                and building.id = #{buildingId}
            </if>
            <if test="unitId != null and unitId != '' ">
                and unit_id = #{unitId}
            </if>
            <if test="houseId != null and houseId != '' ">
                and house_id = #{houseId}
            </if>
        </where>
        <if test="limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>

<!--    按姓名查找-->
    <select id="searchByName" resultMap="ResidentMap">
        select *
        from housing_info_management.resident
        <where>
            <if test="name != null and name != '' ">
                and name like #{name}
            </if>
        </where>
        <if test="limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>

<!--    按身份证号查找-->
    <select id="searchByIdentity" resultMap="ResidentMap">
        select *
        from housing_info_management.resident
        <where>
            <if test="identityCard != null and identityCard != '' ">
                and identity_card = #{identityCard}
            </if>
        </where>
        <if test="limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>


<!--    按户籍查找-->
    <select id="searchByCensus" resultMap="ResidentMap">
        select *
        from housing_info_management.resident
        <where>
            <if test="censusRegister != null and censusRegister != '' ">
                and census_register = #{censusRegister}
            </if>
        </where>
        <if test="limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>



    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into housing_info_management.resident(name, gender, birthday, telephone_number, identity_card,
         census_register, educational_level, party_id, photo, is_head_of_household, house_id)
        values (#{name}, #{gender}, #{birthday}, #{telephoneNumber}, #{identityCard}, #{censusRegister},
        #{educationalLevel}, #{party.id}, #{photo}, #{isHeadOfHousehold}, #{house.id})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update housing_info_management.resident
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="gender != null and gender != ''">
                gender = #{gender},
            </if>
            <if test="birthday != null">
                birthday = #{birthday},
            </if>
            <if test="telephoneNumber != null and telephoneNumber != ''">
                telephone_number = #{telephoneNumber},
            </if>
            <if test="identityCard != null and identityCard != ''">
                identity_card = #{identityCard},
            </if>
            <if test="censusRegister != null and censusRegister != ''">
                census_register = #{censusRegister},
            </if>
            <if test="educationalLevel != null and educationalLevel != ''">
                educational_level = #{educationalLevel},
            </if>
            <if test="party.id != null and party.id != ''">
                party_id = #{party.id},
            </if>
            <if test="photo != null and photo != ''">
                photo = #{photo},
            </if>
            <if test="isHeadOfHousehold != null">
                is_head_of_household = #{isHeadOfHousehold},
            </if>
            <if test="house.id != null and house.id != ''">
                house_id = #{house.id},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from housing_info_management.resident where id = #{id}
    </delete>

<!--   查询户主信息-->
    <select id="queryHeadOfHousehold" resultMap="ResidentMap">
        select
        resident.id, name, gender, birthday, telephone_number, identity_card, census_register,
        educational_level, party_id, photo, is_head_of_household, house_id
        from housing_info_management.resident,housing_info_management.building,
        housing_info_management.unit,housing_info_management.house
        <where>
            building.id = unit.building_id and unit.id = house.unit_id
            and house.id = resident.house_id
            and is_head_of_household = 1
            <if test="buildingId != null and buildingId != '' ">
                and building.id = #{buildingId}
            </if>
            <if test="unitId != null and unitId != '' ">
                and unit_id = #{unitId}
            </if>
            <if test="houseId != null and houseId != '' ">
                and house_id = #{houseId}
            </if>
        </where>
    </select>



<!--    按年龄统计-->
    <select id="statisticalAge" resultType="java.util.Map">
        select
        (
        case
        when a.age is null then '未知'
        when a.age between 0 and 10 then '0-10岁'
        when a.age between 10 and 20 then '10-20岁'
        when a.age between 20 and 30 then '20-30岁'
        when a.age between 30 and 40 then '30-40岁'
        when a.age between 40 and 50 then '40-50岁'
        when a.age between 50 and 60 then '50-60岁'
        when a.age >= 60 then '60岁以上'
        end
        ) as xData,
        count(*) as count
        from
        (
        select(YEAR(curdate()) - YEAR(birthday)) as age
        from housing_info_management.resident,housing_info_management.building,housing_info_management.unit,
             housing_info_management.house
        <where>
            building.id = unit.building_id
            and unit.id = house.unit_id
            and house.id = resident.house_id
            <if test="buildingId != null and buildingId != ''">
                and building.id = #{buildingId}
            </if>
            <if test="unitId != null and unitId != ''">
                and unit.id = #{unitId}
            </if>
        </where>
        ) as a
        group by xData
        order by xData
    </select>

<!--    按性别统计-->
    <select id="statisticalGender" resultType="java.util.Map">
        select gender as xData, count(resident.id) as count
        from housing_info_management.resident,housing_info_management.building,
        housing_info_management.unit,housing_info_management.house
        <where>
            building.id = unit.building_id
            and unit.id = house.unit_id
            and house.id = resident.house_id
            <if test="buildingId != null and buildingId != ''">
                and building.id = #{buildingId}
            </if>
            <if test="unitId != null and unitId != ''">
                and unit.id = #{unitId}
            </if>
        </where>
        group by xData
    </select>

<!--    按户籍统计-->
    <select id="statisticalCensusRegister" resultType="java.util.Map">
        select
        (
            case
                when census_register like '北京%' then '北京'
                when census_register like '天津%' then '天津'
                when census_register like '上海%' then '上海'
                when census_register like '重庆%' then '重庆'
                when census_register like '河北%' then '河北'
                when census_register like '黑龙江%' then '黑龙江'
                when census_register like '吉林%' then '吉林'
                when census_register like '辽宁%' then '辽宁'
                when census_register like '山东%' then '山东'
                when census_register like '江苏%' then '江苏'
                when census_register like '浙江%' then '浙江'
                when census_register like '安徽%' then '安徽'
                when census_register like '福建%' then '福建'
                when census_register like '江西%' then '江西'
                when census_register like '广东%' then '广东'
                when census_register like '广西%' then '广西'
                when census_register like '海南%' then '海南'
                when census_register like '河南%' then '河南'
                when census_register like '湖南%' then '湖南'
                when census_register like '湖北%' then '湖北'
                when census_register like '山西%' then '山西'
                when census_register like '内蒙古%' then '内蒙古'
                when census_register like '宁夏%' then '宁夏'
                when census_register like '青海%' then '青海'
                when census_register like '陕西%' then '陕西'
                when census_register like '甘肃%' then '甘肃'
                when census_register like '新疆%' then '新疆'
                when census_register like '四川%' then '四川'
                when census_register like '贵州%' then '贵州'
                when census_register like '云南%' then '云南'
                when census_register like '西藏%' then '西藏'
                when census_register like '香港%' then '香港'
                when census_register like '澳门%' then '澳门'
                when census_register like '台湾%' then '台湾'
                else '其他'
            end
        ) as home,
          count(resident.id) as value
        from housing_info_management.resident,housing_info_management.building,
        housing_info_management.unit,housing_info_management.house
        <where>
            building.id = unit.building_id
            and unit.id = house.unit_id
            and house.id = resident.house_id
            <if test="buildingId != null and buildingId != ''">
                and building.id = #{buildingId}
            </if>
            <if test="unitId != null and unitId != ''">
                and unit.id = #{unitId}
            </if>
        </where>
        group by home

    </select>


<!--    按学历统计-->
    <select id="statisticalEducational" resultType="java.util.Map">
        select educational_level as xData, count(resident.id) as count
        from housing_info_management.resident,housing_info_management.building,
        housing_info_management.unit,housing_info_management.house
        <where>
            building.id = unit.building_id
            and unit.id = house.unit_id
            and house.id = resident.house_id
            <if test="buildingId != null and buildingId != ''">
                and building.id = #{buildingId}
            </if>
            <if test="unitId != null and unitId != ''">
                and unit.id = #{unitId}
            </if>
        </where>
        group by xData
    </select>
<!--    按所属党派统计-->
    <select id="statisticalParty" resultType="java.util.Map">
        select party.party as xData, count(resident.id) as count
        from housing_info_management.resident,housing_info_management.building,
        housing_info_management.unit,housing_info_management.house,
        housing_info_management.party
        <where>
            building.id = unit.building_id
            and unit.id = house.unit_id
            and house.id = resident.house_id
            and resident.party_id = party.id
            <if test="buildingId != null and buildingId != ''">
                and building.id = #{buildingId}
            </if>
            <if test="unitId != null and unitId != ''">
                and unit.id = #{unitId}
            </if>
        </where>
        group by xData
    </select>

<!--    人数统计-->
    <select id="statisticalPeopleCount" resultType="java.util.Map">
        select building_number as xData, count(*) as count
        from housing_info_management.resident,housing_info_management.building,
             housing_info_management.unit,housing_info_management.house
        where
            building.id = unit.building_id
            and unit.id = house.unit_id
            and house.id = resident.house_id
        group by xData
    </select>

<!--    年龄对比统计-->
    <select id="statisticalAgeCompare" resultType="java.util.Map">
        select
        (
        case
        when a.age is null then '未知'
        when a.age between 0 and 10 then '0-10岁'
        when a.age between 10 and 20 then '10-20岁'
        when a.age between 20 and 30 then '20-30岁'
        when a.age between 30 and 40 then '30-40岁'
        when a.age between 40 and 50 then '40-50岁'
        when a.age between 50 and 60 then '50-60岁'
        when a.age >= 60 then '60岁以上'
        end
        ) as xData,
        count(*) as count,
        a.buildingNumber as buildingNumber
        from
        (
        select(YEAR(curdate()) - YEAR(birthday)) as age, building.building_number as buildingNumber
        from housing_info_management.resident,housing_info_management.building,housing_info_management.unit,
        housing_info_management.house
        <where>
            building.id = unit.building_id
            and unit.id = house.unit_id
            and house.id = resident.house_id
            <if test="buildingId != null and buildingId != ''">
                and building.id = #{buildingId}
            </if>
            <if test="unitId != null and unitId != ''">
                and unit.id = #{unitId}
            </if>
        </where>
        ) as a
        group by xData, buildingNumber
        order by xData
    </select>

<!--    获取居民数量-->
    <select id="getResidentCount" resultType="java.lang.String">
        select count(*) from housing_info_management.resident;
    </select>



</mapper>