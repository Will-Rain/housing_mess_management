<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lz.dao.UnitDao">

    <resultMap type="com.lz.entity.Unit" id="UnitMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="unitNumber" column="unit_number" jdbcType="INTEGER"/>
        <result property="layerCount" column="layer_count" jdbcType="INTEGER"/>
        <result property="houseCount" column="house_count" jdbcType="INTEGER"/>
        <result property="elevatorCount" column="elevator_count" jdbcType="INTEGER"/>
        <association property="building" javaType="com.lz.entity.Building" column="building_id" select="com.lz.dao.BuildingDao.queryById">
                <!-- 注意，这里的 building_id 是查询出来的别名(as)-->
<!--            <result property="id" column="building_id" jdbcType="VARCHAR"/>-->
<!--            <result property="buildingNumber" column="building_number" jdbcType="INTEGER"/>-->
<!--            <result property="constructionTime" column="construction_time" jdbcType="DATE"/>-->
<!--            <result property="propertyManagementCompany" column="property_management_company" jdbcType="VARCHAR"/>-->
<!--            <result property="buildingPrincipal" column="building_principal" jdbcType="VARCHAR"/>-->
<!--            <result property="unitCount" column="unit_count" jdbcType="INTEGER"/>-->
        </association>
    </resultMap>

<!--    &lt;!&ndash;查询单个&ndash;&gt;-->
<!--    <select id="queryById" resultMap="UnitMap">-->
<!--        select-->
<!--          unit.id as id, unit_number, layer_count, house_count, elevator_count,-->
<!--          building.id as building_id,building_number, construction_time,-->
<!--          property_management_company, building_principal, unit_count-->
<!--        from housing_info_management.unit,housing_info_management.building-->
<!--        where unit.id = #{id} and building.id = unit.building_id-->
<!--    </select>-->
    <select id="queryById" resultMap="UnitMap">
        select
          id, unit_number, layer_count, house_count, elevator_count,building_id
        from housing_info_management.unit
        where unit.id = #{id}
    </select>

    <select id="queryByNumber" resultMap="UnitMap">
        select
        unit.id, unit_number, layer_count, house_count, elevator_count,building_id
        from unit,building
        where unit_number = #{unitNumber} and building_number = #{buildingNumber} and building_id = building.id
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UnitMap">
        select
          *
        from housing_info_management.unit
        <where>
            <if test="buildingId != null and buildingId != '' ">
                and building_id = #{buildingId}
            </if>
        </where>
        <if test="limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>


    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into housing_info_management.unit(id,unit_number, layer_count, house_count, elevator_count, building_id)
        values (#{id},#{unitNumber}, #{layerCount}, #{houseCount}, #{elevatorCount}, #{building.id})
    </insert>

    <!--通过主键修改数据-->
    <update id="update" parameterType="com.lz.entity.Unit">
        update housing_info_management.unit
        <set>
            <if test="unitNumber != null">
                unit_number = #{unitNumber},
            </if>
            <if test="layerCount != null">
                layer_count = #{layerCount},
            </if>
            <if test="houseCount != null">
                house_count = #{houseCount},
            </if>
            <if test="elevatorCount != null">
                elevator_count = #{elevatorCount},
            </if>
            <if test="building.id != null and building.id != ''">
                building_id = #{building.id},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from housing_info_management.unit where id = #{id}
    </delete>


    <select id="selectUnitCount" resultType="java.lang.Integer">
        select count(unit_count) from building,unit
        where unit.building_id = building.id and building.id = #{buildingId}
    </select>


    <select id="selectDistinctUnitNumber" resultType="java.lang.Integer">
        select
        distinct unit_number
        from housing_info_management.unit
        <where>
            <if test="buildingId != null and buildingId != ''">
                and  building_id = #{buildingId}
            </if>
        </where>
    </select>

    <select id="houseCountTable" resultMap="UnitMap">
        select
        unit.id, unit_number, layer_count, house_count, elevator_count, building_id
        from unit,building
        <where>
            unit.building_id = building.id
            <if test="buildingId != null and buildingId != '' ">
                and building_id = #{buildingId}
            </if>
            <if test="unitId != null and unitId != '' ">
                and unit.id = #{unitId}
            </if>
        </where>
        <if test="limit != 0">
            limit #{offset}, #{limit}
        </if>
    </select>


</mapper>